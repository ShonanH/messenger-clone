{"ast":null,"code":"var _jsxFileName = \"/Users/shonan/Desktop/React Projects/messenger_clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport FlipMove from \"react-flip-move\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\"); // useState = variable in React\n  // useEffect = run code on a condition in React\n\n  useEffect(() => {\n    //run code here\n    //if condition is blank, then the code runs ONCE when the app component (page) loads\n    setUsername(prompt(\"Please enter your name\"));\n  }, []); //condition\n\n  useEffect(() => {\n    db.collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({\n        id: doc.id,\n        message: doc.data()\n      })));\n    });\n  }, []);\n\n  const sendMessage = event => {\n    //all the logic of sending the message goes here\n    event.preventDefault();\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello world!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=70&h=70\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"app__form\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"app__formControl\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          className: \"app__input\",\n          placeholder: \"Enter a message...\",\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"app__iconButton\",\n          disabled: !input,\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: messages.map(({\n        id,\n        message\n      }) => /*#__PURE__*/_jsxDEV(Message, {\n        username: username,\n        message: message\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/2cjGses0kKXP08gOwr/7T9twqY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shonan/Desktop/React Projects/messenger_clone/src/App.js"],"names":["React","useState","useEffect","Button","FormControl","Input","InputLabel","Message","db","firebase","FlipMove","SendIcon","IconButton","App","input","setInput","messages","setMessages","username","setUsername","prompt","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","message","data","sendMessage","event","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport FlipMove from \"react-flip-move\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  // useState = variable in React\n  // useEffect = run code on a condition in React\n\n  useEffect(() => {\n    //run code here\n    //if condition is blank, then the code runs ONCE when the app component (page) loads\n    setUsername(prompt(\"Please enter your name\"));\n  }, []); //condition\n\n  useEffect(() => {\n    db.collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setMessages(\n          snapshot.docs.map((doc) => ({ id: doc.id, message: doc.data() }))\n        );\n      });\n  }, []);\n\n  const sendMessage = (event) => {\n    //all the logic of sending the message goes here\n    event.preventDefault();\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <h1>Hello world!!!</h1>\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=70&h=70\" />\n      <h2>Welcome {username}</h2>\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input\n            className=\"app__input\"\n            placeholder=\"Enter a message...\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n\n          <IconButton\n            className=\"app__iconButton\"\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n      <FlipMove>\n        {messages.map(({ id, message }) => (\n          <Message key={id} username={username} message={message} />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}