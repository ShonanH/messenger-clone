{"ast":null,"code":"import _slicedToArray from\"/Users/shonan/Desktop/React Projects/messenger_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Button,FormControl,Input,InputLabel}from\"@material-ui/core\";import\"./App.css\";import Message from\"./Message\";import db from\"./firebase\";import firebase from\"firebase\";import FlipMove from\"react-flip-move\";import SendIcon from\"@material-ui/icons/Send\";import{IconButton}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),username=_useState6[0],setUsername=_useState6[1];// useState = variable in React\n// useEffect = run code on a condition in React\nuseEffect(function(){//run code here\n//if condition is blank, then the code runs ONCE when the app component (page) loads\nsetUsername(prompt(\"Please enter your name\"));},[]);//condition\nuseEffect(function(){db.collection(\"messages\").orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){setMessages(snapshot.docs.map(function(doc){return{id:doc.id,message:doc.data()};}));});},[]);var sendMessage=function sendMessage(event){//all the logic of sending the message goes here\nevent.preventDefault();db.collection(\"messages\").add({message:input,username:username,timestamp:firebase.firestore.FieldValue.serverTimestamp()});setInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hello world!!!\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome \",username]}),/*#__PURE__*/_jsx(\"form\",{className:\"app__form\",children:/*#__PURE__*/_jsxs(FormControl,{className:\"app__formControl\",children:[/*#__PURE__*/_jsx(Input,{className:\"app__input\",placeholder:\"Enter a message...\",value:input,onChange:function onChange(event){return setInput(event.target.value);}}),/*#__PURE__*/_jsx(IconButton,{className:\"app__iconButton\",disabled:!input,variant:\"contained\",color:\"primary\",type:\"submit\",onClick:sendMessage,children:/*#__PURE__*/_jsx(SendIcon,{})})]})}),/*#__PURE__*/_jsx(FlipMove,{children:messages.map(function(_ref){var id=_ref.id,message=_ref.message;return/*#__PURE__*/_jsx(Message,{username:username,message:message},id);})})]});}export default App;","map":{"version":3,"sources":["/Users/shonan/Desktop/React Projects/messenger_clone/src/App.js"],"names":["React","useState","useEffect","Button","FormControl","Input","InputLabel","Message","db","firebase","FlipMove","SendIcon","IconButton","App","input","setInput","messages","setMessages","username","setUsername","prompt","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","message","data","sendMessage","event","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,CAAiBC,WAAjB,CAA8BC,KAA9B,CAAqCC,UAArC,KAAuD,mBAAvD,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,UAAT,KAA2B,mBAA3B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,eACaZ,QAAQ,CAAC,EAAD,CADrB,wCACNa,KADM,eACCC,QADD,8BAEmBd,QAAQ,CAAC,EAAD,CAF3B,yCAENe,QAFM,eAEIC,WAFJ,8BAGmBhB,QAAQ,CAAC,EAAD,CAH3B,yCAGNiB,QAHM,eAGIC,WAHJ,eAKb;AACA;AAEAjB,SAAS,CAAC,UAAM,CACd;AACA;AACAiB,WAAW,CAACC,MAAM,CAAC,wBAAD,CAAP,CAAX,CACD,CAJQ,CAIN,EAJM,CAAT,CAIQ;AAERlB,SAAS,CAAC,UAAM,CACdM,EAAE,CAACa,UAAH,CAAc,UAAd,EACGC,OADH,CACW,WADX,CACwB,MADxB,EAEGC,UAFH,CAEc,SAACC,QAAD,CAAc,CACxBP,WAAW,CACTO,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,SAACC,GAAD,QAAU,CAAEC,EAAE,CAAED,GAAG,CAACC,EAAV,CAAcC,OAAO,CAAEF,GAAG,CAACG,IAAJ,EAAvB,CAAV,EAAlB,CADS,CAAX,CAGD,CANH,EAOD,CARQ,CAQN,EARM,CAAT,CAUA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B;AACAA,KAAK,CAACC,cAAN,GACAzB,EAAE,CAACa,UAAH,CAAc,UAAd,EAA0Ba,GAA1B,CAA8B,CAC5BL,OAAO,CAAEf,KADmB,CAE5BI,QAAQ,CAAEA,QAFkB,CAG5BiB,SAAS,CAAE1B,QAAQ,CAAC2B,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAHiB,CAA9B,EAKAvB,QAAQ,CAAC,EAAD,CAAR,CACD,CATD,CAUA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,sCADF,cAEE,iCAAaG,QAAb,GAFF,cAGE,aAAM,SAAS,CAAC,WAAhB,uBACE,MAAC,WAAD,EAAa,SAAS,CAAC,kBAAvB,wBACE,KAAC,KAAD,EACE,SAAS,CAAC,YADZ,CAEE,WAAW,CAAC,oBAFd,CAGE,KAAK,CAAEJ,KAHT,CAIE,QAAQ,CAAE,kBAACkB,KAAD,QAAWjB,CAAAA,QAAQ,CAACiB,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAnB,EAJZ,EADF,cAQE,KAAC,UAAD,EACE,SAAS,CAAC,iBADZ,CAEE,QAAQ,CAAE,CAAC1B,KAFb,CAGE,OAAO,CAAC,WAHV,CAIE,KAAK,CAAC,SAJR,CAKE,IAAI,CAAC,QALP,CAME,OAAO,CAAEiB,WANX,uBAQE,KAAC,QAAD,IARF,EARF,GADF,EAHF,cAwBE,KAAC,QAAD,WACGf,QAAQ,CAACU,GAAT,CAAa,kBAAGE,CAAAA,EAAH,MAAGA,EAAH,CAAOC,OAAP,MAAOA,OAAP,oBACZ,KAAC,OAAD,EAAkB,QAAQ,CAAEX,QAA5B,CAAsC,OAAO,CAAEW,OAA/C,EAAcD,EAAd,CADY,EAAb,CADH,EAxBF,GADF,CAgCD,CAED,cAAef,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport FlipMove from \"react-flip-move\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  // useState = variable in React\n  // useEffect = run code on a condition in React\n\n  useEffect(() => {\n    //run code here\n    //if condition is blank, then the code runs ONCE when the app component (page) loads\n    setUsername(prompt(\"Please enter your name\"));\n  }, []); //condition\n\n  useEffect(() => {\n    db.collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setMessages(\n          snapshot.docs.map((doc) => ({ id: doc.id, message: doc.data() }))\n        );\n      });\n  }, []);\n\n  const sendMessage = (event) => {\n    //all the logic of sending the message goes here\n    event.preventDefault();\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <h1>Hello world!!!</h1>\n      <h2>Welcome {username}</h2>\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input\n            className=\"app__input\"\n            placeholder=\"Enter a message...\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n\n          <IconButton\n            className=\"app__iconButton\"\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n      <FlipMove>\n        {messages.map(({ id, message }) => (\n          <Message key={id} username={username} message={message} />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}