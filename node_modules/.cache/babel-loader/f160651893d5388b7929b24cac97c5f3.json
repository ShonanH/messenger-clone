{"ast":null,"code":"var _jsxFileName = \"/Users/shonan/Desktop/React Projects/messenger_clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\"); // useState = variable in React\n  // useEffect = run code on a condition in React\n\n  useEffect(() => {\n    //run code here\n    //if condition is blank, then the code runs ONCE when the app component (page) loads\n    setUsername(prompt(\"Please enter your name\"));\n  }, []); //condition\n\n  useEffect(() => {\n    db.collection(\"messages\").onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data));\n    });\n  }, []);\n\n  const sendMessage = event => {\n    //all the logic of sending the message goes here\n    event.preventDefault();\n    setMessages([...messages, {\n      username: username,\n      text: input\n    }]);\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello world!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Enter a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !input,\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n      username: username,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/2cjGses0kKXP08gOwr/7T9twqY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shonan/Desktop/React Projects/messenger_clone/src/App.js"],"names":["React","useState","useEffect","Button","FormControl","Input","InputLabel","Message","db","App","input","setInput","messages","setMessages","username","setUsername","prompt","collection","onSnapshot","snapshot","docs","map","doc","data","sendMessage","event","preventDefault","text","target","value","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,EAAP,MAAe,YAAf;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC,CAHa,CAKb;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAa,IAAAA,WAAW,CAACC,MAAM,CAAC,wBAAD,CAAP,CAAX;AACD,GAJQ,EAIN,EAJM,CAAT,CARa,CAYL;;AAERd,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BC,UAA1B,CAAsCC,QAAD,IAAc;AACjDN,MAAAA,WAAW,CAACM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAASA,GAAG,CAACC,IAA/B,CAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACAA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAAEE,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBa,MAAAA,IAAI,EAAEjB;AAA5B,KAAd,CAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAaG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEJ,KADT;AAEE,UAAA,QAAQ,EAAGe,KAAD,IAAWd,QAAQ,CAACc,KAAK,CAACG,MAAN,CAAaC,KAAd;AAF/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,MAAD;AACE,UAAA,QAAQ,EAAE,CAACnB,KADb;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,OAAO,EAAEc,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,EAsBGZ,QAAQ,CAACS,GAAT,CAAcS,OAAD,iBACZ,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEhB,QAAnB;AAA6B,MAAA,OAAO,EAAEgB;AAAtC;AAAA;AAAA;AAAA;AAAA,YADD,CAtBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtDQrB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  // useState = variable in React\n  // useEffect = run code on a condition in React\n\n  useEffect(() => {\n    //run code here\n    //if condition is blank, then the code runs ONCE when the app component (page) loads\n    setUsername(prompt(\"Please enter your name\"));\n  }, []); //condition\n\n  useEffect(() => {\n    db.collection(\"messages\").onSnapshot((snapshot) => {\n      setMessages(snapshot.docs.map((doc) => doc.data));\n    });\n  }, []);\n\n  const sendMessage = (event) => {\n    //all the logic of sending the message goes here\n    event.preventDefault();\n    setMessages([...messages, { username: username, text: input }]);\n    setInput(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <h1>Hello world!!!</h1>\n      <h2>Welcome {username}</h2>\n      <form>\n        <FormControl>\n          <InputLabel>Enter a message...</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n          <Button\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            Send\n          </Button>\n        </FormControl>\n      </form>\n\n      {messages.map((message) => (\n        <Message username={username} message={message} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}